/*
* Copyright (c) 2023 The ZMK Contributers
* SPDX-Licencse-Identifier: MIT
*/

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>

#include "nrf52840_modelm_layouts.dtsi"

/ {
    model = "IBM MODEL M";
    compatible = "ibm,101";

    chosen {
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zephyr,console = &cdc_acm_uart;
        zmk,studio-rpc-uart = &sudio_rpc_uart;
        zmk,battery = &vbatt;
        zmk,kscan = &kscan0;
        zmk,physical-layout = &ansi101_physical_layout;
    };

    matrix_transform0: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <17>;
        rows = <8>;
        map = <
RC(7,2)         RC(5,3) RC(5,4) RC(6,4) RC(7,4)  RC(7,6) RC(7,8) RC(6,9) RC(5,9)  RC(5,6) RC(4,6) RC(4,11) RC(4,12)  RC(4,15) RC(3,15) RC(1,14)

RC(5,2) RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(5,5) RC(5,7) RC(4,7) RC(4,8) RC(4,9) RC(4,10) RC(5,10) RC(5,8)   RC(6,6)  RC(5,12) RC(5,14) RC(5,13)  RC(1,11) RC(1,12) RC(1,13) RC(0,13)
RC(6,2)   RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(6,5) RC(6,7) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(6,10) RC(6,8) RC(2,6)  RC(5,11) RC(4,14) RC(4,13)  RC(3,11) RC(3,12) RC(3,13) RC(3,14)
RC(6,3)     RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(7,5) RC(7,7) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(7,10)       RC(1,6)                              RC(6,11) RC(6,12) RC(6,13)
RC(6,1)       RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(0,5) RC(0,7) RC(1,7) RC(1,8) RC(1,9) RC(0,10)         RC(1,1)                RC(7,14)           RC(2,11) RC(2,12) RC(2,13) RC(2,14)
RC(5,0)   RC(7,15)                        RC(0,6)                                                RC(0,15)   RC(1,0)  RC(0,14) RC(0,11) RC(0,12)  RC(7,12)          RC(7,13)
RC(0,16)
        >;
    };

    // Combine matrix and direct GPIO to integrate DFU button neat the USB connector
    kscan0: kscan_composite {
        compatible = "zmk,kscan-composite";
        columns = <17>;
        rows = <8>;
        wakeup-source;

        // Include the matrix driver
        matrix {
            kscan = <&kscan1>;
        };

        // Include the direct GPIO driver...
        direct {
            kscan = <&kscan2>;
            col-offset = <16>;
        };
    };

    kscan1: kscan_matrix {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "row2col";
        wakeup-source;
        row-gpios
            = <&gpio1 11 (GPIO_OPEN_SOURCE)> // R0
            , <&gpio0 16 (GPIO_OPEN_SOURCE)> // R1
            , <&gpio0 8  (GPIO_OPEN_SOURCE)> // R2
            , <&gpio0 6  (GPIO_OPEN_SOURCE)> // R3
            , <&gpio1 9  (GPIO_OPEN_SOURCE)> // R4
            , <&gpio0 12 (GPIO_OPEN_SOURCE)> // R5
            , <&gpio0 19 (GPIO_OPEN_SOURCE)> // R6
            , <&gpio0 21 (GPIO_OPEN_SOURCE)> // R7
            ;
        col-gpios
            = <&gpio1 6  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // C0
            , <&gpio1 4  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // C1
            , <&gpio1 2  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // C2
            , <&gpio1 0  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // C3
            , <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // C4
            , <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // C5
            , <&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // C6
            , <&gpio0 17 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // C7
            , <&gpio1 7  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // C8
            , <&gpio0 25 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // C9
            , <&gpio0 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // C10
            , <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // C11
            , <&gpio0 9  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // C12
            , <&gpio1 5  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // C13
            , <&gpio0 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // C14
            , <&gpio0 23 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // C15
            ;
    };

    kscan2: kscan_direct {
        compatible = "zmk,kscan-gpio-direct";
        // DFU button is on P1.01 GPIO-direct pin active-low, pull high
        input-gpios
            = <&gpio1 1 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> // DFU
            ;
    };

    vbatt: vbatt {
        //compatible = "zmk,battery-nrf-vddh";
        compatible = "zmk,battery-voltage-divider";
        io-channels = <&adc 2>;
        output-ohms = <2000000>;
        full-ohms = <(2000000 + 806000)>;
        power-gpios = <&gpio1 3 GPIO_ACTIVE_HIGH>;
    };

    aliases {
		led-caps = &led_0;
		led-num = &led_1;
        /* Use led_2 as BLE/Battery blink indicator instead */
		//led-scroll = &led_2;
        led-indicator = &led_2;
    };

    leds {
        compatible = "gpio-leds";
        status = "okay";
        led_0: led_0 {
            gpios = <&gpio0 14 GPIO_ACTIVE_LOW>;
        };
        led_1: led_1 {
            gpios = <&gpio0 26 GPIO_ACTIVE_LOW>;
        };
        led_2: led_2 {
            gpios = <&gpio0 11 GPIO_ACTIVE_LOW>;
        };
    };
};

&adc {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

zephyr_udc0: &usbd {
    status = "okay";
    sudio_rpc_uart: sudio_rpc_uart {
        compatible = "zephyr,cdc-acm-uart";
    };
    cdc_acm_uart: cdc_acm_uart {
        compatible = "zephyr,cdc-acm-uart";
    };
};

&ansi101_physical_layout {
    transform = <&matrix_transform0>;
};

/* CONFIG_GPIO_AS_PINRESET is deprecated use this instead */
&uicr {
    gpio-as-nreset;
};

&flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            reg = <0x00000000 0x00026000>;
        };

        code_partition: partition@26000 {
            reg = <0x00026000 0x000ae000>;
        };

        /*
         * The flash starting at 0x000d4000 and ending at
         * 0x000f3fff is reserved for use by the application.
         */

        /*
         * Storage partition will be used by FCB/LittleFS/NVS
         * if enabled.
         */
        storage_partition: partition@d4000 {
            reg = <0x000d4000 0x00020000>;
        };

        boot_partition: partition@f4000 {
            reg = <0x000f4000 0x0000c000>;
        };
    };
};
