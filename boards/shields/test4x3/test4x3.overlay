#include <dt-bindings/zmk/matrix_transform.h>
#include <physical_layouts.dtsi>



/ {
    chosen {
        zmk,studio-rpc-uart = &sudio_rpc_uart;
        zephyr,console = &cdc_acm_uart;
        zmk,physical-layout = &ph_layout_4x3;
        //zmk,kscan = &kscan0;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;
        diode-direction = "row2col";

        col-gpios 
            = <&gpio0 9  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // col 0
            , <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // col 1
            , <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // col 2
            ;
        row-gpios
            = <&gpio1 13 (GPIO_OPEN_SOURCE)> // row 0
            , <&gpio1 15 (GPIO_OPEN_SOURCE)> // row 1
            , <&gpio0 2  (GPIO_OPEN_SOURCE)> // row 2
            , <&gpio0 29 (GPIO_OPEN_SOURCE)> // row 3
            ;
    };

    default_transform: keymap_transform0 {
        compatible = "zmk,matrix-transform";
        rows = <4>;
        columns = <3>;
        // ┌───┬───┬───┐
        // │ 1 │ 2 │ 3 │
        // ├───┼───┼───┤
        // │ 4 │ 5 │ 6 │
        // ├───┼───┼───┤
        // │ 7 │ 8 │ 9 │
        // ├───┼───┼───┤
        // │ * │ 0 │ # │
        // └───┴───┴───┘
        map = <
            RC(0,0) RC(0,1) RC(0,2)
            RC(1,0) RC(1,1) RC(1,2)
            RC(2,0) RC(2,1) RC(2,2)
            RC(3,0) RC(3,1) RC(3,2)
        >;
    };

    ph_layout_4x3: ph_layout_4x3 {
        compatible = "zmk,physical-layout";
        display-name = "TEST 4x3";
        kscan = <&kscan0>;
        transform = <&default_transform>;
        
        keys  //                     w   h    x    y     rot    rx    ry
            = <&key_physical_attrs 100 100    0    0       0     0     0>
            , <&key_physical_attrs 100 100  100    0       0     0     0>
            , <&key_physical_attrs 100 100  200    0       0     0     0>
            , <&key_physical_attrs 100 100    0  100       0     0     0>
            , <&key_physical_attrs 100 100  100  100       0     0     0>
            , <&key_physical_attrs 100 100  200  100       0     0     0>
            , <&key_physical_attrs 100 100    0  200       0     0     0>
            , <&key_physical_attrs 100 100  100  200       0     0     0>
            , <&key_physical_attrs 100 100  200  200       0     0     0>
            , <&key_physical_attrs 100 100    0  300       0     0     0>
            , <&key_physical_attrs 100 100  100  300       0     0     0>
            , <&key_physical_attrs 100 100  200  300       0     0     0>
        ;
    };

};

zephyr_udc0: &usbd {
    status = "okay";
    sudio_rpc_uart: sudio_rpc_uart {
        compatible = "zephyr,cdc-acm-uart";
    };
    cdc_acm_uart: cdc_acm_uart {
        compatible = "zephyr,cdc-acm-uart";
    };
};

/*
/ {
    chosen {
        zephyr,display = &oled;
    };
};

&pinctrl {
    // configuration for i2c0 device, default state
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 17)>,
                    <NRF_PSEL(TWIM_SCL, 0, 20)>;
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 17)>,
                    <NRF_PSEL(TWIM_SCL, 0, 20)>;
            low-power-enable;
        };
    };
};

&i2c0 {
    compatible = "nordic,nrf-twi";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
    clock-frequency = <I2C_BITRATE_FAST>;    
    status = "okay";

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <64>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <63>;
        //segment-remap;  // Last column address is mapped to first segment - mirror x
        //com-invdir;     // Scan direction is from last COM output to first COM output - mirror y
        //com-sequential; // Sequential COM pin configuration - rotate 180 degree
        prechargep = <0x22>;
        inversion-on;     // Turn on display color inverting
    };
};
*/

/*
// https://github.com/alinelena/mlego-zmk/blob/main/config/boards/shields/mlego5x13_rev9/mlego5x13_rev9.overlay
&spi1 {
    sr_piso: 165@0 {
        compatible = "zmk,gpio-165";
        status = "okay";
        gpio-controller;
        spi-max-frequency = <200000>;
        #gpio-cells = <2>;
        load-gpios = <&gpio0 11 GPIO_ACTIVE_HIGH>;
        reg = <1>;
        ngpios = <8>;
    }; 
};
*/

/ {
    chosen {
        zephyr,display = &st7735s160x80;
    };
};

&pinctrl {
    spi1_default: spi1_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 6)>,
                    <NRF_PSEL(SPIM_MOSI, 0, 8)>,
                    <NRF_PSEL(SPIM_MISO, 0, 22)>;
        };
    };

    spi1_sleep: spi1_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 6)>,
                    <NRF_PSEL(SPIM_MOSI, 0, 8)>,
                    <NRF_PSEL(SPIM_MISO, 0, 22)>;
            low-power-enable;
        };
    };
};

&spi1 {
    status = "okay";
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi1_default>;
    pinctrl-1 = <&spi1_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;

    st7735s160x80: st7735s@0 {
        compatible = "sitronix,st7735r";
        spi-max-frequency = <1000000>;
        reg = <0>;
        cmd-data-gpios = <&gpio0 11 GPIO_ACTIVE_LOW>;	
        reset-gpios = <&gpio0 9  GPIO_ACTIVE_LOW>;
        width = <80>;
        height = <160>;
        x-offset = <0>;
        y-offset = <0>;
        madctl = <0xC0>;
        colmod = <0x05>;
        caset = [00 00 00 4F];
        raset = [00 00 00 9F];
        vmctr1 = <0x0e>;
        invctr = <0x07>;
        pwctr1 = [a2 02 84];
        pwctr2 = [c5];
        pwctr3 = [0a 00];
        pwctr4 = [8a 2a];
        pwctr5 = [8a ee];
        frmctr1 = [01 2c 2d];
        frmctr2 = [01 2c 2d];
        frmctr3 = [01 2c 2d 01 2c 2d];
        gamctrp1 = [02 1c 07 12 37 32 29 2d 29 25 2b 39 00 01 03 10];
        gamctrn1 = [03 1d 07 06 2e 2c 29 2d 2e 2e 37 3f 00 00 02 10];
    };    
};

/*
 st7735s module -> ProMicro nRF52840
 GND            -> GND
 VCC            -> 3V3 (power cut off if P0.13 is low)
 SCK            -> P0.06, SPI clock
 SDA            -> P0.08, SPI data
 RES            -> P0.09, Active low
 DC             -> P0.11, DC=1 - data, DC=0 - command
 CS             -> P1.06, Active low
 BLK            -> D2, Blacklight Control. High: Blacklight on Low: Blacklight off.

ssd1306 module -> ProMicro nRF52840
GND            -> GND
VCC            -> 3V3 (power cut off if P0.13 is low)
SDA            -> P0.17
SCK            -> P0.20
*/